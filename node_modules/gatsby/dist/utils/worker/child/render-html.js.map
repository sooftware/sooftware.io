{"version":3,"sources":["../../../../src/utils/worker/child/render-html.ts"],"names":["join","path","posix","lastSessionId","htmlComponentRenderer","webpackStats","staticQueryResultCache","Map","inFlightStaticQueryPromise","inlineCssPromiseCache","resourcesForTemplateCache","inFlightResourcesForTemplate","clearCaches","clear","getStaticQueryPath","hash","getStaticQueryResult","staticQueryPath","absoluteStaticQueryPath","process","cwd","staticQueryRaw","fs","readFile","JSON","parse","toString","readPageData","publicDir","pagePath","filePath","rawPageData","readWebpackStats","getScriptsAndStylesForTemplate","componentChunkName","uniqScripts","uniqStyles","handleAsset","name","rel","uniqueAssetsMap","endsWith","existingAsset","get","set","chunkName","assets","assetsByChunkName","asset","childAssets","childAssetsByChunkName","Object","entries","scripts","scriptAsset","values","unshift","push","styles","styleAsset","getInlineCssPromise","content","reversedStyles","slice","reverse","reversedScripts","doGetResourcesForTemplate","pageData","staticQueryResultPromises","staticQueryContext","staticQueryHash","staticQueryHashes","memoizedStaticQueryResult","getStaticQueryPromise","then","delete","results","scriptsAndStyles","Promise","all","getResourcesForTemplate","memoizedResourcesForTemplate","inFlight","doWorkPromise","resources","renderHTMLProd","htmlComponentRendererPath","paths","envVars","sessionId","unsafeBuiltinsUsageByPagePath","forEach","key","value","env","require","global","unsafeBuiltinUsage","length","Bluebird","map","resourcesForTemplate","html","unsafeBuiltinsUsage","default","outputFile","e","context","concurrency","renderHTMLDev","outputDir","htmlString"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-namespace */\n\nimport fs from \"fs-extra\"\nimport Bluebird from \"bluebird\"\nimport * as path from \"path\"\nimport { generateHtmlPath, fixedPagePath } from \"gatsby-core-utils\"\n\nimport { IPageDataWithQueryResult } from \"../../page-data\"\nimport { IRenderHtmlResult } from \"../../../commands/build-html\"\n// we want to force posix-style joins, so Windows doesn't produce backslashes for urls\nconst { join } = path.posix\n\ndeclare global {\n  namespace NodeJS {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    interface Global {\n      unsafeBuiltinUsage: Array<string> | undefined\n    }\n  }\n}\n\n/**\n * Used to track if renderHTMLProd / renderHTMLDev are called within same \"session\" (from same renderHTMLQueue call).\n * As long as sessionId remains the same we can rely on memoized/cached resources for templates, css file content for inlining and static query results.\n * If session changes we invalidate our memoization caches.\n */\nlet lastSessionId = 0\nlet htmlComponentRenderer\nlet webpackStats\n\nconst staticQueryResultCache = new Map<string, any>()\nconst inFlightStaticQueryPromise = new Map<string, Promise<any>>()\n\nconst inlineCssPromiseCache = new Map<string, Promise<string>>()\n\nconst resourcesForTemplateCache = new Map<string, IResourcesForTemplate>()\nconst inFlightResourcesForTemplate = new Map<\n  string,\n  Promise<IResourcesForTemplate>\n>()\n\nfunction clearCaches(): void {\n  staticQueryResultCache.clear()\n  inFlightStaticQueryPromise.clear()\n\n  resourcesForTemplateCache.clear()\n  inFlightResourcesForTemplate.clear()\n\n  inlineCssPromiseCache.clear()\n}\n\nconst getStaticQueryPath = (hash: string): string =>\n  join(`page-data`, `sq`, `d`, `${hash}.json`)\n\nconst getStaticQueryResult = async (hash: string): Promise<any> => {\n  const staticQueryPath = getStaticQueryPath(hash)\n  const absoluteStaticQueryPath = join(process.cwd(), `public`, staticQueryPath)\n  const staticQueryRaw = await fs.readFile(absoluteStaticQueryPath)\n\n  return JSON.parse(staticQueryRaw.toString())\n}\n\nasync function readPageData(\n  publicDir: string,\n  pagePath: string\n): Promise<IPageDataWithQueryResult> {\n  const filePath = join(\n    publicDir,\n    `page-data`,\n    fixedPagePath(pagePath),\n    `page-data.json`\n  )\n  const rawPageData = await fs.readFile(filePath, `utf-8`)\n\n  return JSON.parse(rawPageData)\n}\n\nasync function readWebpackStats(publicDir: string): Promise<any> {\n  const filePath = join(publicDir, `webpack.stats.json`)\n  const rawPageData = await fs.readFile(filePath, `utf-8`)\n\n  return JSON.parse(rawPageData)\n}\n\ninterface IScriptsAndStyles {\n  scripts: Array<any>\n  styles: Array<any>\n  reversedStyles: Array<any>\n  reversedScripts: Array<any>\n}\n\ninterface IChunk {\n  name: string\n  rel: string\n  content?: string\n}\n\nasync function getScriptsAndStylesForTemplate(\n  componentChunkName\n): Promise<IScriptsAndStyles> {\n  const uniqScripts = new Map<string, IChunk>()\n  const uniqStyles = new Map<string, IChunk>()\n\n  /**\n   * Add script or style to correct bucket. Make sure those are unique (no duplicates) and that \"preload\" will win over any other \"rel\"\n   */\n  function handleAsset(name: string, rel: string): void {\n    let uniqueAssetsMap: Map<string, IChunk> | undefined\n\n    // pick correct map depending on asset type\n    if (name.endsWith(`.js`)) {\n      uniqueAssetsMap = uniqScripts\n    } else if (name.endsWith(`.css`)) {\n      uniqueAssetsMap = uniqStyles\n    }\n\n    if (uniqueAssetsMap) {\n      const existingAsset = uniqueAssetsMap.get(name)\n\n      if (\n        existingAsset &&\n        rel === `preload` &&\n        existingAsset.rel !== `preload`\n      ) {\n        // if we already track this asset, but it's not preload - make sure we make it preload\n        // as it has higher priority\n        existingAsset.rel = `preload`\n      } else if (!existingAsset) {\n        uniqueAssetsMap.set(name, { name, rel })\n      }\n    }\n  }\n\n  // Pick up scripts and styles that are used by a template using webpack.stats.json\n  for (const chunkName of [`app`, componentChunkName]) {\n    const assets = webpackStats.assetsByChunkName[chunkName]\n    if (!assets) {\n      continue\n    }\n\n    for (const asset of assets) {\n      if (asset === `/`) {\n        continue\n      }\n\n      handleAsset(asset, `preload`)\n    }\n\n    // Handling for webpack magic comments, for example:\n    // import(/* webpackChunkName: \"<chunk_name>\", webpackPrefetch: true */ `<path_to_module>`)\n    // Shape of webpackStats.childAssetsByChunkName:\n    // {\n    //   childAssetsByChunkName: {\n    //     <name_of_top_level_chunk>: {\n    //       prefetch: [\n    //         \"<chunk_name>-<chunk_hash>.js\",\n    //       ]\n    //     }\n    //   }\n    // }\n    const childAssets = webpackStats.childAssetsByChunkName[chunkName]\n    if (!childAssets) {\n      continue\n    }\n\n    for (const [rel, assets] of Object.entries(childAssets)) {\n      // @ts-ignore TS doesn't like that assets is not typed and especially that it doesn't know that it's Iterable\n      for (const asset of assets) {\n        handleAsset(asset, rel)\n      }\n    }\n  }\n\n  // create scripts array, making sure \"preload\" scripts have priority\n  const scripts: Array<IChunk> = []\n  for (const scriptAsset of uniqScripts.values()) {\n    if (scriptAsset.rel === `preload`) {\n      // give priority to preload\n      scripts.unshift(scriptAsset)\n    } else {\n      scripts.push(scriptAsset)\n    }\n  }\n\n  // create styles array, making sure \"preload\" styles have priority and that we read .css content for non-prefetch \"rel\"s for inlining\n  const styles: Array<IChunk> = []\n  for (const styleAsset of uniqStyles.values()) {\n    if (styleAsset.rel !== `prefetch`) {\n      let getInlineCssPromise = inlineCssPromiseCache.get(styleAsset.name)\n      if (!getInlineCssPromise) {\n        getInlineCssPromise = fs.readFile(\n          join(process.cwd(), `public`, styleAsset.name),\n          `utf-8`\n        )\n\n        inlineCssPromiseCache.set(styleAsset.name, getInlineCssPromise)\n      }\n\n      styleAsset.content = await getInlineCssPromise\n    }\n\n    if (styleAsset.rel === `preload`) {\n      // give priority to preload\n      styles.unshift(styleAsset)\n    } else {\n      styles.push(styleAsset)\n    }\n  }\n\n  return {\n    scripts,\n    styles,\n    reversedStyles: styles.slice(0).reverse(),\n    reversedScripts: scripts.slice(0).reverse(),\n  }\n}\n\ninterface IResourcesForTemplate extends IScriptsAndStyles {\n  staticQueryContext: Record<string, any>\n}\n\nasync function doGetResourcesForTemplate(\n  pageData: IPageDataWithQueryResult\n): Promise<IResourcesForTemplate> {\n  const staticQueryResultPromises: Array<Promise<void>> = []\n  const staticQueryContext: Record<string, any> = {}\n  for (const staticQueryHash of pageData.staticQueryHashes) {\n    const memoizedStaticQueryResult =\n      staticQueryResultCache.get(staticQueryHash)\n    if (memoizedStaticQueryResult) {\n      staticQueryContext[staticQueryHash] = memoizedStaticQueryResult\n      continue\n    }\n\n    let getStaticQueryPromise = inFlightStaticQueryPromise.get(staticQueryHash)\n    if (!getStaticQueryPromise) {\n      getStaticQueryPromise = getStaticQueryResult(staticQueryHash)\n      inFlightStaticQueryPromise.set(staticQueryHash, getStaticQueryPromise)\n      getStaticQueryPromise.then(() => {\n        inFlightStaticQueryPromise.delete(staticQueryHash)\n      })\n    }\n\n    staticQueryResultPromises.push(\n      getStaticQueryPromise.then(results => {\n        staticQueryContext[staticQueryHash] = results\n      })\n    )\n  }\n\n  const scriptsAndStyles = await getScriptsAndStylesForTemplate(\n    pageData.componentChunkName\n  )\n\n  await Promise.all(staticQueryResultPromises)\n\n  return {\n    staticQueryContext,\n    ...scriptsAndStyles,\n  }\n}\n\nasync function getResourcesForTemplate(\n  pageData: IPageDataWithQueryResult\n): Promise<IResourcesForTemplate> {\n  const memoizedResourcesForTemplate = resourcesForTemplateCache.get(\n    pageData.componentChunkName\n  )\n  if (memoizedResourcesForTemplate) {\n    return memoizedResourcesForTemplate\n  }\n\n  const inFlight = inFlightResourcesForTemplate.get(pageData.componentChunkName)\n  if (inFlight) {\n    return inFlight\n  }\n\n  const doWorkPromise = doGetResourcesForTemplate(pageData)\n  inFlightResourcesForTemplate.set(pageData.componentChunkName, doWorkPromise)\n\n  const resources = await doWorkPromise\n\n  resourcesForTemplateCache.set(pageData.componentChunkName, resources)\n  inFlightResourcesForTemplate.delete(pageData.componentChunkName)\n\n  return resources\n}\n\nexport const renderHTMLProd = async ({\n  htmlComponentRendererPath,\n  paths,\n  envVars,\n  sessionId,\n}: {\n  htmlComponentRendererPath: string\n  paths: Array<string>\n  envVars: Array<[string, string | undefined]>\n  sessionId: number\n}): Promise<IRenderHtmlResult> => {\n  const publicDir = join(process.cwd(), `public`)\n\n  const unsafeBuiltinsUsageByPagePath = {}\n\n  // Check if we need to do setup and cache clearing. Within same session we can reuse memoized data,\n  // but it's not safe to reuse them in different sessions. Check description of `lastSessionId` for more details\n  if (sessionId !== lastSessionId) {\n    clearCaches()\n\n    // This is being executed in child process, so we need to set some vars\n    // for modules that aren't bundled by webpack.\n    envVars.forEach(([key, value]) => (process.env[key] = value))\n\n    htmlComponentRenderer = require(htmlComponentRendererPath)\n\n    webpackStats = await readWebpackStats(publicDir)\n\n    lastSessionId = sessionId\n\n    if (global.unsafeBuiltinUsage && global.unsafeBuiltinUsage.length > 0) {\n      unsafeBuiltinsUsageByPagePath[`__import_time__`] =\n        global.unsafeBuiltinUsage\n    }\n  }\n\n  await Bluebird.map(\n    paths,\n    async pagePath => {\n      try {\n        const pageData = await readPageData(publicDir, pagePath)\n        const resourcesForTemplate = await getResourcesForTemplate(pageData)\n\n        const { html, unsafeBuiltinsUsage } =\n          await htmlComponentRenderer.default({\n            pagePath,\n            pageData,\n            ...resourcesForTemplate,\n          })\n\n        if (unsafeBuiltinsUsage.length > 0) {\n          unsafeBuiltinsUsageByPagePath[pagePath] = unsafeBuiltinsUsage\n        }\n\n        return fs.outputFile(generateHtmlPath(publicDir, pagePath), html)\n      } catch (e) {\n        if (e.unsafeBuiltinsUsage && e.unsafeBuiltinsUsage.length > 0) {\n          unsafeBuiltinsUsageByPagePath[pagePath] = e.unsafeBuiltinsUsage\n        }\n        // add some context to error so we can display more helpful message\n        e.context = {\n          path: pagePath,\n          unsafeBuiltinsUsageByPagePath,\n        }\n        throw e\n      }\n    },\n    { concurrency: 2 }\n  )\n\n  return { unsafeBuiltinsUsageByPagePath }\n}\n\n// TODO: remove when DEV_SSR is done\nexport const renderHTMLDev = async ({\n  htmlComponentRendererPath,\n  paths,\n  envVars,\n  sessionId,\n}: {\n  htmlComponentRendererPath: string\n  paths: Array<string>\n  envVars: Array<[string, string | undefined]>\n  sessionId: number\n}): Promise<Array<unknown>> => {\n  const outputDir = join(process.cwd(), `.cache`, `develop-html`)\n\n  // Check if we need to do setup and cache clearing. Within same session we can reuse memoized data,\n  // but it's not safe to reuse them in different sessions. Check description of `lastSessionId` for more details\n  if (sessionId !== lastSessionId) {\n    clearCaches()\n\n    // This is being executed in child process, so we need to set some vars\n    // for modules that aren't bundled by webpack.\n    envVars.forEach(([key, value]) => (process.env[key] = value))\n\n    htmlComponentRenderer = require(htmlComponentRendererPath)\n\n    lastSessionId = sessionId\n  }\n\n  return Bluebird.map(\n    paths,\n    async pagePath => {\n      try {\n        const htmlString = await htmlComponentRenderer.default({\n          pagePath,\n        })\n        return fs.outputFile(generateHtmlPath(outputDir, pagePath), htmlString)\n      } catch (e) {\n        // add some context to error so we can display more helpful message\n        e.context = {\n          path: pagePath,\n        }\n        throw e\n      }\n    },\n    { concurrency: 2 }\n  )\n}\n"],"file":"render-html.js"}